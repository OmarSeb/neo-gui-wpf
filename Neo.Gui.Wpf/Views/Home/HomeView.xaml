<controls:NeoWindow 
    x:Class="Neo.Gui.Wpf.Views.Home.HomeView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mahapps="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:globalization="clr-namespace:Neo.Gui.Base.Globalization;assembly=Neo.Gui.Base"
    xmlns:homeVm="clr-namespace:Neo.Gui.ViewModels.Home;assembly=Neo.Gui.ViewModels"
    xmlns:home="clr-namespace:Neo.Gui.Wpf.Views.Home"
    xmlns:controls="clr-namespace:Neo.Gui.Wpf.Controls"
    xmlns:markupExtensions="clr-namespace:Neo.Gui.Wpf.MarkupExtensions"
    DataContext="{markupExtensions:DataContextBinding ViewModel=homeVm:HomeViewModel}"
    Title="{x:Static globalization:Strings.GuiTitle}" 
    Height="520" 
    Width="740">

    <controls:NeoWindow.InputBindings>
        <KeyBinding Key="N" Modifiers="Control" Command="{Binding CreateWalletCommand}" />
        <KeyBinding Key="O" Modifiers="Control" Command="{Binding OpenWalletCommand}" />
        
        <KeyBinding Key="F12" Command="{Binding ShowDeveloperToolsCommand}" />
    </controls:NeoWindow.InputBindings>

    <controls:NeoWindow.RightWindowCommands>
        <mahapps:WindowCommands>
            <Button Content="{x:Static globalization:Strings.Settings}" Command="{Binding ShowSettingsCommand}" />
        </mahapps:WindowCommands>
    </controls:NeoWindow.RightWindowCommands>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <!-- Tool Strip Menu -->
        <Menu Grid.Row="0">
            <MenuItem Header="{x:Static globalization:Strings.WalletMenuHeader}">
                <MenuItem Header="{x:Static globalization:Strings.NewWalletMenuHeader}" Command="{Binding CreateWalletCommand}" InputGestureText="Ctrl+N" />
                <MenuItem Header="{x:Static globalization:Strings.OpenWalletMenuHeader}" Command="{Binding OpenWalletCommand}" InputGestureText="Ctrl+O" />
                <MenuItem Header="{x:Static globalization:Strings.ChangePasswordMenuHeader}" Command="{Binding ChangePasswordCommand}" IsEnabled="{Binding WalletIsOpen}" />

                <Separator />
                
                <MenuItem Header="{x:Static globalization:Strings.CloseWalletMenuHeader}" Command="{Binding CloseWalletCommand}" IsEnabled="{Binding WalletIsOpen}" />
                
                <Separator />

                <MenuItem Header="{x:Static globalization:Strings.ExitMenuHeader}" Command="{Binding ExitCommand}" />
            </MenuItem>
            <MenuItem Header="{x:Static globalization:Strings.TransactionMenuHeader}" IsEnabled="{Binding WalletIsOpen}">
                <MenuItem Header="{x:Static globalization:Strings.TransferMenuHeader}" Command="{Binding TransferCommand}" />
                <MenuItem Header="{x:Static globalization:Strings.TransactionsMenuHeader}" Command="{Binding ShowTransactionDialogCommand}" />

                <Separator />

                <MenuItem Header="{x:Static globalization:Strings.SignatureMenuHeader}" Command="{Binding ShowSigningDialogCommand}" />
            </MenuItem>
            <MenuItem Header="{x:Static globalization:Strings.AdvancedMenuHeader}">
                <MenuItem Header="{x:Static globalization:Strings.GasClaimMenuHeader}" Command="{Binding ClaimCommand}" IsEnabled="{Binding WalletIsOpen}" />

                <Separator />

                <MenuItem Header="{x:Static globalization:Strings.RequestCertificateMenuHeader}" Command="{Binding RequestCertificateCommand}" IsEnabled="{Binding WalletIsOpen}" />
                <MenuItem Header="{x:Static globalization:Strings.AssetRegistrationMenuHeader}" Command="{Binding AssetRegistrationCommand}" IsEnabled="{Binding WalletIsOpen}" />
                <MenuItem Header="{x:Static globalization:Strings.AssetDistributionMenuHeader}" Command="{Binding DistributeAssetCommand}" IsEnabled="{Binding WalletIsOpen}" />

                <Separator />

                <MenuItem Header="{x:Static globalization:Strings.DeployContractMenuHeader}" Command="{Binding DeployContractCommand}" IsEnabled="{Binding WalletIsOpen}" />
                <MenuItem Header="{x:Static globalization:Strings.InvokeContractMenuHeader}" Command="{Binding InvokeContractCommand}" IsEnabled="{Binding WalletIsOpen}" />

                <Separator />

                <MenuItem Header="{x:Static globalization:Strings.ElectionMenuHeader}" Command="{Binding ShowElectionDialogCommand}" IsEnabled="{Binding WalletIsOpen}" />

                <Separator />

                <MenuItem Header="{x:Static globalization:Strings.SettingsMenuHeader}" Command="{Binding ShowSettingsCommand}" />
            </MenuItem>
            <MenuItem Header="{x:Static globalization:Strings.HelpMenuHeader}">
                <MenuItem Header="{x:Static globalization:Strings.CheckForHelpMenuHeader}" Command="{Binding CheckForHelpCommand}" />
                <MenuItem Header="{x:Static globalization:Strings.OfficialWebMenuHeader}" Command="{Binding ShowOfficialWebsiteCommand}" />

                <Separator />

                <MenuItem Header="{x:Static globalization:Strings.DeveloperToolsMenuHeader}" InputGestureText="F12" Command="{Binding ShowDeveloperToolsCommand}" />

                <Separator />

                <MenuItem Header="{x:Static globalization:Strings.AboutNeoMenuHeader}" Command="{Binding AboutNeoCommand}" />
            </MenuItem>
        </Menu>

        <TabControl Grid.Row="1">
            <!-- Account Tab -->
            <TabItem Header="{x:Static globalization:Strings.Accounts}">
                <home:AccountsView HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
            </TabItem>

            <!-- Asset Tab -->
            <TabItem Header="{x:Static globalization:Strings.Assets}">
                <home:AssetsView  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
            </TabItem>

            <!-- Transaction Tab -->
            <TabItem Header="{x:Static globalization:Strings.Transactions}">
                <home:TransactionsView HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
            </TabItem>
        </TabControl>

        <!-- Status Strip -->
        <StatusBar Grid.Row="2" Height="24">
            <StatusBarItem HorizontalAlignment="Left" Margin="0 0 8 0">
                <StatusBarItem.Content>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{x:Static globalization:Strings.HeightHeading}" Margin="0 0 8 0" />

                        <TextBlock Text="{Binding HeightStatus}" />
                    </StackPanel>
                </StatusBarItem.Content>
            </StatusBarItem>

            <StatusBarItem HorizontalAlignment="Left" Margin="0 0 8 0">
                <StatusBarItem.Content>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{x:Static globalization:Strings.NumberOfConnectionsHeading}" Margin="0 0 8 0" />

                        <TextBlock Text="{Binding NodeCount}" />
                    </StackPanel>
                </StatusBarItem.Content>
            </StatusBarItem>

            <StatusBarItem HorizontalAlignment="Left" Visibility="{Binding Path=NewVersionVisible, Converter={StaticResource BoolToVisibilityConverter}, FallbackValue=Hidden}">
                <StatusBarItem.Content>
                    <TextBlock>
                        <Hyperlink Command="{Binding ShowUpdateDialogCommand}">
                            <TextBlock Text="{Binding NewVersionLabel}" />
                        </Hyperlink>
                    </TextBlock>
                </StatusBarItem.Content>
            </StatusBarItem>

        <StatusBarItem HorizontalAlignment="Right">
                <StatusBarItem.Content>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding NeoNetworkLabel}"/>
                        <Rectangle VerticalAlignment="Stretch" Width="1" Margin="5,2" Stroke="White" />
                        <TextBlock Text="{Binding BlockStatus}" Margin="0 0 8 0" />
                        <ProgressBar Minimum="0" Maximum="100" SmallChange="1" Value="{Binding NextBlockProgressPercentage, Mode=OneWay}" IsIndeterminate="{Binding NextBlockProgressIsIndeterminate}" Height="14" Width="100" />
                    </StackPanel>
                </StatusBarItem.Content>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</controls:NeoWindow>
